# Application Configuration
APP_PORT=5000
NODE_ENV=development # development, production, test

# Database Configuration (PostgreSQL example)
DB_HOST=localhost
DB_USER=scolarix_user
DB_PASS=your_db_password
DB_NAME=scolarix_dev
DB_DIALECT=postgres
DB_LOGGING=true # Set to false in production or for cleaner test output
DB_PORT=5432 # Default PostgreSQL port

# Sequelize Sync Options (Use with caution, especially in production)
# DB_SYNC=false # Recommended for production (use migrations instead)
# DB_SYNC_FORCE=false # Avoid true in production as it can drop tables
DB_SYNC=true # Can be true for development if you want Sequelize to auto-create/alter tables
DB_SYNC_FORCE=false

# JSON Web Token (JWT) Configuration
JWT_SECRET=your_very_strong_secret_key_for_jwt
JWT_EXPIRES_IN=1h # Example: 1h, 7d, 30m

# CORS Configuration
# Comma-separated list of allowed origins for production (e.g., https://yourfrontend.com)
# For development, often '*' is used via app logic, but be specific for production.
ALLOWED_ORIGINS=http://localhost:3000

# Node.js Cluster Mode (for production performance)
ENABLE_CLUSTER=false # Set to true to enable cluster mode (typically for production)

# Logging Level (optional, if your logger supports it via env var)
# LOG_LEVEL=info # e.g., error, warn, info, http, verbose, debug, silly

# Test Specific Environment (example, usually in .env.test)
# Note: For running tests, a separate .env.test is typically used.
# DB_NAME_TEST=scolarix_test
# DB_USER_TEST=testuser
# DB_PASS_TEST=testpassword
